-- This table is used for validating spatial data.

-- a large tablespace is needed for spatial datatype. Run below to generate tablespaces if not ready. 

--CREATE  LARGE  TABLESPACE SPATIALTBS32K PAGESIZE 32 K  MANAGED BY AUTOMATIC STORAGE EXTENTSIZE 64 OVERHEAD 12.67 PREFETCHSIZE 64 TRANSFERRATE 0.18 BUFFERPOOL  BP32K ;
--CREATE  SYSTEM TEMPORARY  TABLESPACE TMPTBS32K PAGESIZE 32 K  MANAGED BY AUTOMATIC STORAGE EXTENTSIZE 32 OVERHEAD 12.67 PREFETCHSIZE 32 TRANSFERRATE 0.18 BUFFERPOOL  BP32K ;


DROP TABLE GIS.BOUNDARY;
DROP TABLE GIS.BOUNDARY_POLYGON;
DROP TABLE GIS.GEOMFAIL;
DROP TABLE GIS.LARGEBOUNDARY;
DROP TABLE GIS.LARGEBOUNDARY_POLYGON;
DROP TABLE GIS.LARGEGEOMFAIL;


CREATE TABLE GIS.BOUNDARY(
	SESSION_UID VARCHAR(32),
	MARKUP_UID VARCHAR(64),
	BOUNDARY    VARCHAR(31000)
);

CREATE TABLE GIS.BOUNDARY_POLYGON(
	SESSION_UID VARCHAR(32),
	MARKUP_UID  VARCHAR(64),
	POLYGON  DB2GSE.ST_POLYGON INLINE LENGTH 4000
)COMPRESS YES IN spatialtbs32k;    


CREATE TABLE GIS.GEOMFAIL(
	SESSION_UID VARCHAR(32),
	MARKUP_UID  VARCHAR(64),
	SQLSTATE CHAR(5), 
	BOUNDARY  VARCHAR(31000)
)COMPRESS YES IN spatialtbs32k;  





CREATE TABLE GIS.LARGEBOUNDARY(
        SESSION_UID VARCHAR(32),
        MARKUP_UID  VARCHAR(64),
        BOUNDARY    CLOB(2M),
        DB2GSE_BOUNDARY CLOB(2M)
);

CREATE TABLE GIS.LARGEBOUNDARY_POLYGON(
        SESSION_UID VARCHAR(32),
        MARKUP_UID  VARCHAR(64),
        POLYGON  DB2GSE.ST_POLYGON INLINE LENGTH 4000
)COMPRESS YES IN spatialtbs32k;


CREATE TABLE GIS.LARGEGEOMFAIL(
        SESSION_UID VARCHAR(32),
        MARKUP_UID  VARCHAR(64),
        SQLSTATE CHAR(5),
        BOUNDARY  CLOB(2M)
)COMPRESS YES IN spatialtbs32k;
